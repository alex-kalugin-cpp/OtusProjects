#language: cpp
#compiler: gcc
#dist: trusty

#before_install:
  # C++11
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
#  - sudo apt-get update -qq

#install:
  # C++11
#  - sudo apt-get install -qq g++-5
#  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
 #before_script:
 #- sudo apt-get update -qq
#  script:
#  - cmake .
#  - cmake --build .
#  - cmake --build . --target test
#  - cmake --build . --target package
#script:
#  - g++ main.cpp -std=c++11 -o helloworld-0.0.$TRAVIS_BUILD_NUMBER-Linux.deb
# - g++ main.cpp -std=c++11 -o helloworld.deb
# - ./helloworld
 # deploy:
 #   provider: script
 #   skip_cleanup: true
 #   script:
#    - curl -T helloworld-0.0.$TRAVIS_BUILD_NUMBER-Linux.deb -alex-kalugin-cpp:$BINTRAY_API_KEY "https://api.bintray.com/content/alex-kalugin-cpp/Otus-cpp1/helloworld/$TRAVIS_BUILD_NUMBER/helloworld-0.0.$TRAVIS_BUILD_NUMBER-Linux.deb;deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1"
#  - curl -T helloworld.deb -alex-kalugin-cpp:$BINTRAY_API_KEY "https://api.bintray.com/content/alex-kalugin-cpp/Otus-cpp1/helloworld/helloworld.deb;deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1"
#deploy:
#  provider: bintray
#  file: "/Otus-cpp1/helloworld/"
#  user: "alex-kalugin-cpp"
#  key: "8b34f7c7faa6c17f15c11c81cf6977cbeceee656"
dist: trusty
sudo: required
language:
  - cpp
compiler:
  - gcc
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
script:
  # Check versions of gcc, g++ and cmake
  - gcc -v && g++ -v && cmake --version
  # Run your build commands next
  -  mkdir build; cd build/; cmake ../; make
  - ./helloworld
